void shabby_shell(const char * tty_name)
{
	int fd_stdin  = open(tty_name, O_RDWR);
	assert(fd_stdin  == 0);
	int fd_stdout = open(tty_name, O_RDWR);
	assert(fd_stdout == 1);

	char rdbuf[128];
	function();
	while (1) {
		write(1, "$deborahOS: ", 13);
		int r = read(0, rdbuf, 70);
		rdbuf[r] = 0;
		int argc = 0;
		char * argv[PROC_ORIGIN_STACK];
		char * process[PROC_ORIGIN_STACK][10];
		char * p = rdbuf;
		char * s;
		int word = 0;
		char ch;
		int num=1;// the command sum number
		do {
			ch = *p;
			if (*p != ' ' && *p != 0 && !word) {			
				s = p;//command first letter
				word = 1;
			}
			if ((*p == ' ' || *p == 0 ) && word ) {
				word = 0;				
				argv[argc++]= s;
				*p = 0;
			}
			p++;
		} while(ch);
		argv[argc] = 0;
		int j,i=0;
		int head=0;
		for(i = 0;argv[i]!=0;i++){
			if(*(argv[i])=='$'){
				memcpy(&(process[j]),&(argv[head]),4*(i-head));
				head = i+1;
				j++;
				num++;
			}
		}
		memcpy(&(process[j]),&(argv[head]),4*(i-head));
		int times=0;
		for(times;times<num;times++){
			int pid=fork();
			if (pid != 0) { /* parent */
				int s;
				wait(&s);
			}
			else {	
				execv(process[times][0], process[times]);
				return 0;
			}
		}
		//}
	}

	close(1);
	close(0);
}
